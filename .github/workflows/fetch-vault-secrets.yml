name: Fetch and Inject Vault Secrets

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1'


jobs:
  fetch-secrets:
    runs-on: ubuntu-latest

    env:
      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
      VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
      VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Install Vault CLI and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y vault jq

      - name: 🔐 Login to Vault using AppRole
        id: vault-login
        run: |
          echo "🔐 Authenticating with Vault..."
          vault write -format=json auth/approle/login \
            role_id="$VAULT_ROLE_ID" \
            secret_id="$VAULT_SECRET_ID" > login.json

          VAULT_TOKEN=$(jq -r ".auth.client_token" login.json)
          echo "::add-mask::$VAULT_TOKEN"
          echo "VAULT_TOKEN=$VAULT_TOKEN" >> $GITHUB_ENV

      - name: 📤 Fetch DB credentials
        run: |
          export VAULT_TOKEN
          echo "📤 Fetching DB credentials..."
          vault kv get -format=json secret/arkstream/db/credentials > secret.json

          USERNAME=$(jq -r ".data.data.username" secret.json)
          PASSWORD=$(jq -r ".data.data.password" secret.json)

          echo "::add-mask::$USERNAME"
          echo "::add-mask::$PASSWORD"

          echo "DB_USERNAME=$USERNAME" >> $GITHUB_ENV
          echo "DB_PASSWORD=$PASSWORD" >> $GITHUB_ENV

      - name: 📝 Show fetched secrets (sanitized)
        run: |
          echo "DB Username: $DB_USERNAME"
          echo "DB Password: (hidden)"
