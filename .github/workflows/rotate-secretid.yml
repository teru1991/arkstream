name: Rotate Vault SecretID

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1' # 毎週月曜

jobs:
  rotate:
    runs-on: ubuntu-latest

    env:
      VAULT_ADDR: ${{ secrets.ARKSTREAM_VAULT_ADDR }}
      VAULT_ROLE_ID: ${{ secrets.ARKSTREAM_VAULT_ROLE_ID }}
      VAULT_SECRET_ID: ${{ secrets.ARKSTREAM_VAULT_SECRET_ID }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Vault CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg software-properties-common curl jq
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update
          sudo apt-get install -y vault

      - name: Login to Vault
        id: vault-login
        run: |
          vault write -format=json auth/approle/login \
            role_id="$VAULT_ROLE_ID" \
            secret_id="$VAULT_SECRET_ID" > login.json

          VAULT_TOKEN=$(jq -r ".auth.client_token" login.json)
          echo "::add-mask::$VAULT_TOKEN"
          echo "VAULT_TOKEN=$VAULT_TOKEN" >> $GITHUB_ENV

      - name: Rotate SecretID
        run: |
          export VAULT_TOKEN="$VAULT_TOKEN"
          vault write -format=json auth/approle/role/arkstream-db/secret-id > new_secret.json
          NEW_SECRET_ID=$(jq -r ".data.secret_id" new_secret.json)
          echo "::add-mask::$NEW_SECRET_ID"
          echo "NEW_SECRET_ID=$NEW_SECRET_ID" >> $GITHUB_ENV

      - name: Update GitHub Secret
        uses: peter-evans/create-or-update-secret@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          secret-name: ARKSTREAM_VAULT_SECRET_ID
          secret-value: ${{ env.NEW_SECRET_ID }}

      - name: Notify
        run: echo "✅ New SecretID set and saved in GitHub Secrets."