version: "3.9"

services:
  vault:
    build: .
    container_name: profinaut_vault
    ports:
      - "127.0.0.1:8200:8200"
    cap_add:
      - IPC_LOCK
    volumes:
      - ./vault/config:/vault/config:ro
      - ./vault/cert:/vault/cert:ro
      - ./vault/log:/vault/log
      - ./vault/backup:/vault/backup
    environment:
      VAULT_LOCAL_CONFIG: /vault/config/vault.hcl
    depends_on:
      - consul
    networks:
      - docker_profinaut_net
    restart: unless-stopped

  consul:
    image: consul:1.15.4
    container_name: profinaut_consul
    command: agent -server -bootstrap-expect=1 -ui=false -client=0.0.0.0 -data-dir=/consul/data
    volumes:
      - consul_data:/consul/data
    networks:
      - docker_profinaut_net
    restart: unless-stopped

  mongo:
    image: mongo:6
    container_name: profinaut_mongo
    ports:
      - "127.0.0.1:27018:27017"
    volumes:
      - ./storage/mongo/data:/data/db
      - ./storage/mongo/dump:/data/dump
    networks:
      - docker_profinaut_net
    restart: unless-stopped

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: profinaut_zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - docker_profinaut_net
    restart: unless-stopped

  kafka:
    image: bitnami/kafka:3.5
    container_name: profinaut_kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
    volumes:
      - ./storage/kafka/data:/var/lib/kafka/data
    networks:
      - docker_profinaut_net
    depends_on:
      - zookeeper
    restart: unless-stopped

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: profinaut_kafka_ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: profinaut
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - docker_profinaut_net
    depends_on:
      - kafka
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: profinaut_prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - docker_profinaut_net
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: profinaut_grafana
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana:/var/lib/grafana
    networks:
      - docker_profinaut_net
    restart: unless-stopped

  loki:
    image: grafana/loki:2.9.2
    container_name: profinaut_loki
    command: -config.file=/etc/loki/config.yml
    volumes:
      - ./monitoring/loki:/etc/loki
    ports:
      - "3100:3100"
    networks:
      - docker_profinaut_net
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:latest
    container_name: profinaut_alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager:/etc/alertmanager
    networks:
      - docker_profinaut_net
    restart: unless-stopped

  vault-exporter:
    image: tanium/vault-exporter
    container_name: profinaut_vault_exporter
    environment:
      VAULT_ADDR: http://vault:8200
    ports:
      - "9102:9102"
    networks:
      - docker_profinaut_net
    depends_on:
      - vault
    restart: unless-stopped

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    container_name: profinaut_kafka_exporter
    ports:
      - "9308:9308"
    command:
      - "--kafka.server=kafka:9092"
    networks:
      - docker_profinaut_net
    depends_on:
      - kafka
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower
    container_name: profinaut_watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 300 --label-enable
    restart: unless-stopped
    networks:
      - docker_profinaut_net

networks:
  docker_profinaut_net:
    driver: bridge

volumes:
  consul_data:
