version: "3.9"

services:
  vault:
    build: .  # Dockerfile を使用
    container_name: profinaut_vault
    ports:
      - "0.0.0.0:8200:8200"  # 外部公開したい場合のみ
    cap_add:
      - IPC_LOCK  # 本番環境では必要
    volumes:
      - ./vault/config:/vault/config:ro  # Vault設定をマウント
      - ./vault/cert:/vault/cert:ro      # 証明書をマウント
    depends_on:
      - consul
    networks:
      - docker_profinaut_net
    restart: unless-stopped

  consul:
    image: consul:1.15.4
    container_name: profinaut_consul
    restart: unless-stopped
    command: agent -server -bootstrap-expect=1 -ui=false -client=0.0.0.0 -data-dir=/consul/data
    volumes:
      - consul_data:/consul/data
    networks:
      - docker_profinaut_net
    # ports: 8500 は外部公開しない

  mongo:
    image: mongo:6
    container_name: profinaut_mongo
    restart: unless-stopped
    ports:
      - "127.0.0.1:27018:27017"  # ポートを変更
    volumes:
      - ./storage/mongo/data:/data/db
    networks:
      - docker_profinaut_net

  kafka:
    image: bitnami/kafka:3.5
    container_name: profinaut_kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
    volumes:
      - ./storage/kafka/data:/var/lib/kafka/data
    networks:
      - docker_profinaut_net

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: profinaut_zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - docker_profinaut_net

networks:
  docker_profinaut_net:
    driver: bridge

volumes:
  consul_data:
