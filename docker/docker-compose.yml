version: "3.8"

services:
  vault:
    image: hashicorp/vault:1.13.3
    container_name: profinaut-vault
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    volumes:
      - ./vault/config/vault.hcl:/vault/config/vault.hcl
      - ./vault/data:/vault/data
      - ./vault/cert:/vault/cert
      - ./vault/log:/vault/log
    environment:
      VAULT_ADDR: "http://0.0.0.0:8200"
      VAULT_LOCAL_CONFIG: '{"backend":{"file":{"path":"/vault/data"}},"listener":{"tcp":{"address":"0.0.0.0:8200","tls_disable":1}}}'
    command: "server"

  mongo:
    image: mongo:6.0
    container_name: profinaut-mongo
    ports:
      - "27017:27017"
    volumes:
      - ./storage/mongo/data:/data/db

  postgres:
    image: postgres:15
    container_name: profinaut-postgres
    environment:
      POSTGRES_USER: profinaut
      POSTGRES_PASSWORD: profinautpass
      POSTGRES_DB: profinaut_db
    volumes:
      - ./storage/postgres/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: profinaut-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: profinaut-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./storage/kafka/data:/var/lib/kafka/data

  prometheus:
    image: prom/prometheus:latest
    container_name: profinaut-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    container_name: profinaut-grafana
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    volumes:
      - ./docker/grafana/grafana_dashboard_template.json:/etc/grafana/provisioning/dashboards/dashboard.json

  loki:
    image: grafana/loki:2.9.0
    container_name: profinaut-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yml
    volumes:
      - ./docker/monitoring/loki-config.yml:/etc/loki/loki-config.yml

  promtail:
    image: grafana/promtail:2.9.0
    container_name: profinaut-promtail
    volumes:
      - /var/log:/var/log
      - ./docker/monitoring/promtail-config.yml:/etc/promtail/promtail-config.yml
    command: -config.file=/etc/promtail/promtail-config.yml

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: profinaut-frontend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
    restart: unless-stopped

# üîí Secrets„Å®Vault„ÅØ.env.vault„Å´Âàá„ÇäÂá∫„Åó„Å¶Ë®òËºâ
